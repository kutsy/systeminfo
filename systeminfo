#!/bin/bash

###############################################################################################################################################################
#
# Author:       kutsy
# Repository:   https://github.com/kutsy/systeminfo
# Version:      2024-01-30
#
###############################################################################################################################################################

export LC_NUMERIC="C"

IFS=$'\n'       # Internal Field Separator

# Functions
print_date() {
    local date=$(date +"%Y-%m-%d %H:%M:%S")
    printf "  DATE | %s \n\n" "$date"
}

print_cpu_info() {
    local cpumodel=$(grep -m 1 -i 'model name' /proc/cpuinfo | awk -F ': ' '{print $2}')
    local cpucount=$(grep -c '^processor' /proc/cpuinfo)
    local la1=$(cut -d ' ' -f1 /proc/loadavg)
    local la5=$(cut -d ' ' -f2 /proc/loadavg)
    local la15=$(cut -d ' ' -f3 /proc/loadavg)

    printf "  CPU  | %s \n  #CPU | %s \n  LA   | %-5s %-5s %-5s \n\n" "$cpumodel" "$cpucount" "$la1" "$la5" "$la15"
}

print_cpu_temp() {
    local cputemp=""
    if command -v sensors &> /dev/null; then
        cputemp=$(sensors | grep -m 1 -i 'core 0' | awk '{print $3}')
    elif command -v vcgencmd &> /dev/null; then
        cputemp=$(vcgencmd measure_temp | cut -d '=' -f2)
    fi

    [ -n "$cputemp" ] && printf "  TEMP | cpu  %+8s \n\n" "$cputemp"
}

print_memory_info() {
    local meminfo=$(awk '/^MemTotal|^MemFree|^Cached|^MemAvailable/ {print $1, $2}' /proc/meminfo)
    local memtotal=$(echo "$meminfo" | awk '/MemTotal/ {printf "%.1f", $2/1024}')
    local memfree=$(echo "$meminfo" | awk '/MemFree/ {printf "%.1f", $2/1024}')
    local memcached=$(echo "$meminfo" | awk '/Cached/ {printf "%.1f", $2/1024}')
    local memavail=$(echo "$meminfo" | awk '/MemAvailable/ {printf "%.1f", $2/1024}')

    printf "  MEM  | tot  %+8sM | free  %+8sM | cache  %+8sM | avail  %+8sM \n\n" "$memtotal" "$memfree" "$memcached" "$memavail"
}

print_swap_info() {
    local swapinfo=$(awk '/^SwapTotal|^SwapFree/ {print $1, $2}' /proc/meminfo)
    local swaptotal=$(echo "$swapinfo" | awk '/SwapTotal/ {printf "%.1f", $2/1024}')
    local swapfree=$(echo "$swapinfo" | awk '/SwapFree/ {printf "%.1f", $2/1024}')

    printf "  SWP  | tot  %+8sM | free  %+8sM \n\n" "$swaptotal" "$swapfree"
}

print_system_info() {
    local arch=$(uname -m)
    local kern=$(uname -r)
    local sys=$(lsb_release -ds || cat /etc/os-release | grep PRETTY_NAME | cut -d '"' -f2)
    local hostname=$(hostname)

    printf "  ARCH | %s \n  KERN | %s \n  OS   | %s \n  HOST | %s \n\n" "$arch" "$kern" "$sys" "$hostname"
}

print_uptime() {
    local uptime=$(awk '{print int($1)}' /proc/uptime)
    local uptime_days=$(( uptime/60/60/24 ))
    local uptime_hours=$(( uptime/60/60%24 ))
    local uptime_minutes=$(( uptime/60%60 ))
    local uptime_seconds=$(( uptime%60 ))

    printf "  UP   | %s \n\n" "$uptime_days days, $uptime_hours hours, $uptime_minutes minutes, $uptime_seconds seconds"
}

print_disk_usage() {
    df -h --output=source,fstype,size,used,avail,pcent,target | tail -n +2 | while read -r line; do
        printf "  DF   | %s \n" "$line"
    done
    echo
}

print_network_info() {
    ip -4 -o addr show | awk '{print $2, $4}' | while read -r interface ipaddr; do
    printf "  NET  | %s %s\n" "$interface" "$ipaddr"
    done
    echo
}

print_active_users() {
    who | while read -r line; do
        printf "  WHO  | %s \n" "$line"
    done
    echo
}

# Main Script
clear
print_date
print_cpu_info
print_cpu_temp
print_memory_info
print_swap_info
print_system_info
print_uptime
print_disk_usage
print_network_info
print_active_users

###############################################################################################################################################################
